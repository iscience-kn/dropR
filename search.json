[{"path":"https://iscience-kn.github.io/dropR/articles/interactive.html","id":"dropout-analysis-walkthrough","dir":"Articles","previous_headings":"","what":"Dropout Analysis Walkthrough","title":"Interactive Dropout Analysis with R","text":"section describes extract information dropout demo data set without using dropR shiny UI. First, let’s make sure demo data set loaded available. data set look like :","code":"library(dropR) # Use demo dataset in a new data frame to be edited df <- dropRdemo"},{"path":"https://iscience-kn.github.io/dropR/articles/interactive.html","id":"basic-dropout-statistics","dir":"Articles","previous_headings":"Dropout Analysis Walkthrough","what":"Basic Dropout Statistics","title":"Interactive Dropout Analysis with R","text":"Now, let’s extract dropout, .e., information participant dropped questionnaire never returned. , need identify last question someone filled missing data present .k.NAs. use add_dropout_idx function demo data set add position question variables data. demo data, questions easily identified prefix vi_: experimental_condition column indicates belonging sub sample, treated differently. example, groups receive different sequence questions different wording. Next ’ll compute table containing basic dropout statistics item using compute_stats function. 246 participants total demo sample, 235 participants remain survey first question, accounting 95.53 percent sample. last question experiment, 61.79% participants “survived”. cs column shows absolute cumulative dropout count. stats table shows dropout statistics total sample first defined function by_cond, also shows statistics experimental condition separately. table basis many analyses can easily reported.","code":"qs <- which(grepl(\"vi_\", names(df))) # add numeric drop out position to original dataset df <- add_dropout_idx(df, q_pos = qs) kable(head(df[,c(1:3,(ncol(df)-1):ncol(df))])) stats <- compute_stats(df,                        by_cond = \"experimental_condition\",                        no_of_vars = length(qs)) kable(head(stats))"},{"path":"https://iscience-kn.github.io/dropR/articles/interactive.html","id":"plotting-dropout-curves","dir":"Articles","previous_headings":"Dropout Analysis Walkthrough","what":"Plotting Dropout Curves","title":"Interactive Dropout Analysis with R","text":"Based statistics table, dropR plots dropout curves conveniently.  default, function plot dropout curves chooses color palette designed de distinguishable color blind individuals. Adhering journal guidelines, may also choose gray color palette, distinguishing lines line type gray value. Next, may want run statistical dropout analyses using dropR. can find -depth tutorial test article.","code":"plot_do_curve(stats)"},{"path":"https://iscience-kn.github.io/dropR/articles/tests.html","id":"running-a-chi-sq--test-for-a-selected-question","dir":"Articles","previous_headings":"","what":"Running a Chi-sq. Test for a Selected Question","title":"Running Dropout related Tests with R","text":"NOTE: Chi-sq. tests available column denoting experimental condition given. Let’s compute Chisq test question 15 experimentatl conditions 11 12. dropR’s dropout Chisq-Test returns list containing actual test results dropout overview table selected question.","code":"do_chisq(stats,          chisq_question = 15,          sel_cond_chisq = c('11','12'),          p_sim = TRUE) #> $`Test result` #>  #>  Pearson's Chi-squared test with simulated p-value (based on 2000 #>  replicates) #>  #> data:  test_table #> X-squared = 1.1979, df = NA, p-value = 0.3338 #>  #>  #> $`Dropout at question 15` #>           participants #> conditions dropout remaining #>         11      14        58 #>         12       7        50"},{"path":"https://iscience-kn.github.io/dropR/articles/tests.html","id":"kaplan-meier-estimation","dir":"Articles","previous_headings":"","what":"Kaplan-Meier Estimation","title":"Running Dropout related Tests with R","text":"","code":"kpm <- do_kpm(df = add_dropout_idx(dropRdemo, qs),               condition_col = \"experimental_condition\",               model_fit = \"total\")  kpm$model_fit #> [1] \"total\" head(kpm$steps) #>   x         y      uppr       lwr condition #> 1 0 0.3821138 0.4479241 0.3259726     total #> 2 1 0.3821138 0.4479241 0.3259726     total #> 3 1 0.3373984 0.4019727 0.2831975     total #> 4 2 0.3373984 0.4019727 0.2831975     total #> 5 2 0.3252033 0.3893417 0.2716307     total #> 6 3 0.3252033 0.3893417 0.2716307     total head(kpm$d) #>   obs_id experimental_condition vi_1 vi_2 vi_3 vi_4 vi_5 vi_6 vi_7 vi_8 vi_9 #> 1 7a9f33                     11    1    1    1    1    1    1    1    1    1 #> 2 e11f94                     22    1   NA    1    1    1    1   NA   NA   NA #> 3 e72a50                     22    1   NA    1    1    1    1    1    1    1 #> 4 f90f5f                     11    1    1    1    1    1    1    1    1    1 #> 5 20bc72                     12    1   NA    1    1    1    1    1    1    1 #> 6 76b97a                     22    1   NA    1    1    1    1    1    1    1 #>   vi_10 vi_11 vi_12 vi_13 vi_14 vi_15 vi_16 vi_17 vi_18 vi_19 vi_20 vi_21 vi_22 #> 1     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 2    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> 3     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 4     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 5     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 6     1     1     1     1     1     1     1     1     1     1     1     1     1 #>   vi_23 vi_24 vi_25 vi_26 vi_27 vi_28 vi_29 vi_30 vi_31 vi_32 vi_33 vi_34 vi_35 #> 1     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 2    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> 3     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 4     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 5     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 6     1     1     1     1     1    NA    NA    NA    NA    NA    NA    NA    NA #>   vi_36 vi_37 vi_38 vi_39 vi_40 vi_41 vi_42 vi_43 vi_44 vi_45 vi_46 vi_47 vi_48 #> 1     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 2    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> 3     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 4     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 5     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 6    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>   vi_49 vi_50 vi_51 vi_52 do_idx surv #> 1     1     1     1     1      0    0 #> 2    NA    NA    NA    NA      6    6 #> 3     1     1     1     1      0    0 #> 4     1     1     1     1      0    0 #> 5     1     1     1     1      0    0 #> 6    NA    NA    NA    NA     27   27"},{"path":"https://iscience-kn.github.io/dropR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Annika Tave Overlander. Author, maintainer. Matthias Bannert. Author. Ulf-Dietrich Reips. Contributor.","code":""},{"path":"https://iscience-kn.github.io/dropR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Overlander , Bannert M (2024). dropR: Drop analysis R. R package version 1.0, https://github.com/iscience-kn/dropR, https://iscience-kn.github.io/dropR/.","code":"@Manual{,   title = {dropR: Drop out analysis in R},   author = {Annika Tave Overlander and Matthias Bannert},   year = {2024},   note = {R package version 1.0, https://github.com/iscience-kn/dropR},   url = {https://iscience-kn.github.io/dropR/}, }"},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Drop out analysis in R","text":"can install development version dropR GitHub : currently working get dropR back CRAN. ’s , can install dropR via","code":"# install.packages(\"remotes\") remotes::install_github(\"iscience-kn/dropR\") install.packages(\"dropR\")"},{"path":"https://iscience-kn.github.io/dropR/index.html","id":"usage-as-a-shiny-app-graphical-user-interface","dir":"","previous_headings":"","what":"Usage as a Shiny App (Graphical User Interface)","title":"Drop out analysis in R","text":"start dropR's built-GUI, run","code":"dropR::start_app()"},{"path":"https://iscience-kn.github.io/dropR/index.html","id":"interactive-usage-use-dropr-on-the-r-console","dir":"","previous_headings":"","what":"Interactive Usage (use dropR on the R Console)","title":"Drop out analysis in R","text":"can also use dropR’s functionality within R, .e., either console within functions packages. Read interactive usage dropR walkthrough article.","code":"#>  #> Welcome to dropR, #> to start the interactive Graphical User Interface locally in your R session, #> run start_app()"},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Dropout Index to a Data.Frame — add_dropout_idx","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"Find drop positions data.frame contains multiple questions asked sequentially. function adds Dropout Index variable do_idx data.frame necessary analyses dropout. Use function first prepare dropout analysis. , keep going creating dropout statistics using compute_stats().","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"","code":"add_dropout_idx(df, q_pos)"},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"R/add_dropout_idx.R","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"df data.frame containing NAs q_pos numeric range columns contain question items","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"Original data frame column do_idx added.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"Importantly, function start counting missing data end data frame. missing data somewhere , .e. single item skipped forgotten counted dropout. function identify sequences missing data go end data frame add number last answered question do_idx. Therefore, variables must order asked, otherwise analyses valid.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"","code":"dropout <- add_dropout_idx(dropRdemo, 3:54)"},{"path":"https://iscience-kn.github.io/dropR/reference/all_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate Names and Values of a Named Vector — all_values","title":"Concatenate Names and Values of a Named Vector — all_values","text":"all_values function takes named vector x concatenates names formatted values single string separated HTML  tags.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/all_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate Names and Values of a Named Vector — all_values","text":"","code":"all_values(x)"},{"path":"https://iscience-kn.github.io/dropR/reference/all_values.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Concatenate Names and Values of a Named Vector — all_values","text":"R/utils.R","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/all_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate Names and Values of a Named Vector — all_values","text":"x Named vector concatenate names values.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/all_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate Names and Values of a Named Vector — all_values","text":"character vector containing names formatted values input vector, separated line breaks.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/all_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate Names and Values of a Named Vector — all_values","text":"","code":"my_vector <- c(apples = 5, bananas = 3, oranges = 2) all_values(my_vector) #> [1] \"apples: 5<br />bananas: 3<br />oranges: 2\""},{"path":"https://iscience-kn.github.io/dropR/reference/compute_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Dropout Statistics — compute_stats","title":"Compute Dropout Statistics — compute_stats","text":"second step conducting dropout analysis dropR. Outputs necessary statistics analyze visualize dropout, sample size N data (condition selected), cumulative dropout remaining participants absolute numbers percent. experimental condition added, stats calculated whole data total.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/compute_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Dropout Statistics — compute_stats","text":"","code":"compute_stats(df, by_cond = \"None\", no_of_vars)"},{"path":"https://iscience-kn.github.io/dropR/reference/compute_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Dropout Statistics — compute_stats","text":"df data.frame containing variable do_idx add_dropout_idx() by_cond character name condition variable data, defaults 'None' output total statistics. no_of_vars numeric number variables contain questions","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/compute_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Dropout Statistics — compute_stats","text":"data frame 6 columns (q_idx, condition, cs, N, remain, pct_remain) many rows questions original data (overall data conditions selected condition).","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/compute_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Dropout Statistics — compute_stats","text":"","code":"stats <- compute_stats(df = add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)"},{"path":"https://iscience-kn.github.io/dropR/reference/do_chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Chisq-Test Given a Question Position — do_chisq","title":"Compute Chisq-Test Given a Question Position — do_chisq","text":"function performs chi-squared contingency table test dropout given question data. Note input data format computed compute_stats(). test can performed either conditions (excluding total) select conditions.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Chisq-Test Given a Question Position — do_chisq","text":"","code":"do_chisq(df, chisq_question, sel_cond_chisq, p_sim = TRUE)"},{"path":"https://iscience-kn.github.io/dropR/reference/do_chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Chisq-Test Given a Question Position — do_chisq","text":"df data.frame stats computed compute_stats(). chisq_question numeric question compare dropout . sel_cond_chisq vector (class conditions variable original data set) selected conditions. p_sim boolean Simulate p value parameter (Monte Carlo simulation)? Defaults TRUE.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/do_chisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Chisq-Test Given a Question Position — do_chisq","text":"","code":"stats <- compute_stats(add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)  do_chisq(stats, 47, c(12, 22), TRUE) #> $`Test result` #>  #> \tPearson's Chi-squared test with simulated p-value (based on 2000 #> \treplicates) #>  #> data:  test_table #> X-squared = 4.8802, df = NA, p-value = 0.03598 #>  #>  #> $`Dropout at question 47` #>           participants #> conditions dropout remaining #>         12      15        42 #>         22      28        33 #>"},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Kaplan-Meier Survival Estimation — do_kpm","title":"Kaplan-Meier Survival Estimation — do_kpm","text":"function needs data set dropout index added add_dropout_idx(). `do_kpm``function performs survival analysis Kaplan-Meier Estimation returns list containing survival steps, original data frame, model fit type. function can fit survival model either entire data set separately specified condition column.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kaplan-Meier Survival Estimation — do_kpm","text":"","code":"do_kpm(df, condition_col = \"experimental_condition\", model_fit = \"total\")"},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kaplan-Meier Survival Estimation — do_kpm","text":"df data set `do_idx``added add_dropout_idx() condition_col character denoting experimental conditions model model_fit character either \"total\" total model \"conditions\"","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kaplan-Meier Survival Estimation — do_kpm","text":"list containing steps (survival steps extracted fitted models), d (original data frame), model_fit (model fit type).","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kaplan-Meier Survival Estimation — do_kpm","text":"","code":"demo_kpm <- do_kpm(df = add_dropout_idx(dropRdemo, 3:54), condition_col = \"experimental_condition\", model_fit = \"total\")  head(demo_kpm$steps) #>   x         y      uppr       lwr condition #> 1 0 0.3821138 0.4479241 0.3259726     total #> 2 1 0.3821138 0.4479241 0.3259726     total #> 3 1 0.3373984 0.4019727 0.2831975     total #> 4 2 0.3373984 0.4019727 0.2831975     total #> 5 2 0.3252033 0.3893417 0.2716307     total #> 6 3 0.3252033 0.3893417 0.2716307     total"},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a Kaplan Meier Plot — do_kpm_plot","title":"Draw a Kaplan Meier Plot — do_kpm_plot","text":"do_kpm_plot function generates Kaplan-Meier survival plot based output do_kpm() function. allows customization conditions display, confidence intervals, color palettes, y-axis scaling.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a Kaplan Meier Plot — do_kpm_plot","text":"","code":"do_kpm_plot(   kds,   sel_conds = c(\"11\", \"12\", \"21\", \"22\"),   kpm_ci = T,   color_palette_kp = \"color_blind\",   full_scale_kpm = F )"},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a Kaplan Meier Plot — do_kpm_plot","text":"kds list object modeled do_kpm() sel_conds character experimental conditions plot. kpm_ci boolean confidence bands plot? Defaults TRUE. color_palette_kp character indicating color palette use. Defaults 'color_blind', alternatively choose 'gray' gray scale values 'default' ggplot2 default colors. full_scale_kpm boolean Y axis show full range 0 100? Defaults FALSE.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a Kaplan Meier Plot — do_kpm_plot","text":"function returns ggplot object containing Kaplan-Meier survival plot. Using Shiny App version dropR, plot can easily downloaded different formats.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw a Kaplan Meier Plot — do_kpm_plot","text":"","code":"do_kpm_plot(do_kpm(d = add_dropout_idx(dropRdemo, 3:54), condition_col = \"experimental_condition\", model_fit = \"total\"))   do_kpm_plot(do_kpm(d = add_dropout_idx(dropRdemo, 3:54), condition_col = \"experimental_condition\", model_fit = \"conditions\"), sel_conds = c(\"11\", \"12\", \"21\", \"22\"))"},{"path":"https://iscience-kn.github.io/dropR/reference/do_ks.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","title":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","text":"test used survival analysis extreme conditions, ones different rates dropout. function automatically prepares data runs stats::ks.test() .","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_ks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","text":"","code":"do_ks(data, question)"},{"path":"https://iscience-kn.github.io/dropR/reference/do_ks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","text":"data data frame made compute_stats(), containing information percent remaining per question per condition question Index question included analysis, commonly last question survey.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_ks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","text":"result Kolmogorov-Smirnoff test including conditions different dropout rates.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_ks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","text":"","code":"stats <- compute_stats(df = add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)  do_ks(stats, 52) #>  #> \tExact two-sample Kolmogorov-Smirnov test of conditions 12 & 22 at #> \tquestion 52 #>  #> data:  data$pct_remain[data$condition == 12] and data$pct_remain[data$condition == 22] #> D = 0.82692, p-value < 2.2e-16 #> alternative hypothesis: two-sided #>"},{"path":"https://iscience-kn.github.io/dropR/reference/do_or_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Dropout Odds Ratio Table — do_or_table","title":"Dropout Odds Ratio Table — do_or_table","text":"function calculates Odds Ratio table given question selected experimental conditions. needs data format created compute_stats() input.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_or_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dropout Odds Ratio Table — do_or_table","text":"","code":"do_or_table(df, chisq_question, sel_cond_chisq)"},{"path":"https://iscience-kn.github.io/dropR/reference/do_or_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dropout Odds Ratio Table — do_or_table","text":"df data.frame stats table computed compute_stats. chisq_question numeric question calculate table sel_cond_chisq character vector naming experimental conditions compare","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/do_or_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dropout Odds Ratio Table — do_or_table","text":"","code":"stats <- compute_stats(df = add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)  do_or_table(stats, chisq_question = 51, sel_cond_chisq = c(\"11\", \"12\", \"21\", \"22\")) #>           11        12       21       22 #> 11 1.0000000 0.5952381 1.161616 1.510417 #> 12 1.6800000 1.0000000 1.951515 2.537500 #> 21 0.8608696 0.5124224 1.000000 1.300272 #> 22 0.6620690 0.3940887 0.769070 1.000000"},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Steps for Uneven Data Points — do_steps","title":"Calculate Steps for Uneven Data Points — do_steps","text":"do_steps function calculates steps data points represented numbers questions original experimental survey data x remaining percent participants y.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Steps for Uneven Data Points — do_steps","text":"","code":"do_steps(x, y, return_df = T)"},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Steps for Uneven Data Points — do_steps","text":"x Numeric vector representing question numbers y Numeric vector representing remaining percent participants return_df Logical. TRUE, function returns data frame; otherwise, returns list.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Steps for Uneven Data Points — do_steps","text":"data frame list containing modified x y values","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Steps for Uneven Data Points — do_steps","text":"Due nature dropout/ survival data, step functions necessary accurately depict participants remaining. Dropout data includes time event (.k.. dropout certain question time), changes remaining participants discrete rather continuous. means changes survival probability occur specific points better represented steps continuum.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Steps for Uneven Data Points — do_steps","text":"","code":"x <- c(1, 2, 3, 4, 5) y <- c(100, 100, 95, 90, 85) do_steps(x, y) #>   x   y #> 1 1 100 #> 2 3 100 #> 3 3  95 #> 4 4  95 #> 5 4  90 #> 6 5  90 #> 7 5  85  # Using the example dataset dropRdemo  stats <- compute_stats(df = add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)  tot_stats <- stats[stats$condition == \"total\", ] do_steps(tot_stats$q_idx, tot_stats$pct_remain) #>     x         y #> 1   1 0.9552846 #> 2   2 0.9552846 #> 3   2 0.9430894 #> 4   3 0.9430894 #> 5   3 0.9065041 #> 6   4 0.9065041 #> 7   4 0.8943089 #> 8   5 0.8943089 #> 9   5 0.8902439 #> 10  6 0.8902439 #> 11  6 0.8739837 #> 12  7 0.8739837 #> 13  7 0.8577236 #> 14  8 0.8577236 #> 15  8 0.8495935 #> 16  9 0.8495935 #> 17  9 0.8455285 #> 18 10 0.8455285 #> 19 10 0.8292683 #> 20 11 0.8292683 #> 21 11 0.8252033 #> 22 12 0.8252033 #> 23 12 0.7967480 #> 24 15 0.7967480 #> 25 15 0.7886179 #> 26 16 0.7886179 #> 27 16 0.7845528 #> 28 17 0.7845528 #> 29 17 0.7804878 #> 30 18 0.7804878 #> 31 18 0.7682927 #> 32 19 0.7682927 #> 33 19 0.7601626 #> 34 20 0.7601626 #> 35 20 0.7560976 #> 36 21 0.7560976 #> 37 21 0.7479675 #> 38 22 0.7479675 #> 39 22 0.7398374 #> 40 23 0.7398374 #> 41 23 0.7317073 #> 42 25 0.7317073 #> 43 25 0.7235772 #> 44 26 0.7235772 #> 45 26 0.7195122 #> 46 27 0.7195122 #> 47 27 0.7154472 #> 48 28 0.7154472 #> 49 28 0.7113821 #> 50 29 0.7113821 #> 51 29 0.7073171 #> 52 30 0.7073171 #> 53 30 0.7032520 #> 54 31 0.7032520 #> 55 31 0.6991870 #> 56 32 0.6991870 #> 57 32 0.6951220 #> 58 33 0.6951220 #> 59 33 0.6910569 #> 60 34 0.6910569 #> 61 34 0.6869919 #> 62 35 0.6869919 #> 63 35 0.6747967 #> 64 36 0.6747967 #> 65 36 0.6666667 #> 66 37 0.6666667 #> 67 37 0.6626016 #> 68 39 0.6626016 #> 69 39 0.6585366 #> 70 40 0.6585366 #> 71 40 0.6504065 #> 72 44 0.6504065 #> 73 44 0.6463415 #> 74 45 0.6463415 #> 75 45 0.6382114 #> 76 46 0.6382114 #> 77 46 0.6300813 #> 78 47 0.6300813 #> 79 47 0.6219512 #> 80 48 0.6219512 #> 81 48 0.6178862 #> 82 52 0.6178862"},{"path":"https://iscience-kn.github.io/dropR/reference/dropR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dropR: Drop out analysis in R — dropR-package","title":"dropR: Drop out analysis in R — dropR-package","text":"Analysis dropout surveys experimental setups.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/dropR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dropR: Drop out analysis in R — dropR-package","text":"Maintainer: Annika Tave Overlander annika-tave.overlander@uni.kn Authors: Matthias Bannert bannert@kof.ethz.ch contributors: Ulf-Dietrich Reips [contributor]","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/dropRdemo.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo Dataset for Dropout in an Online Survey — dropRdemo","title":"Demo Dataset for Dropout in an Online Survey — dropRdemo","text":"Simulated demo data set dropout survey.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/dropRdemo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo Dataset for Dropout in an Online Survey — dropRdemo","text":"data frame 246 rows 54 variables (order presented fictional survey). obs_id Observation ID experimental_condition experimental condition vi_1 item 1 vi_2 item 2 vi_3 item 3 vi_4 item 4 vi_5 item 5 vi_6 item 6 vi_7 item 7 vi_8 item 8 vi_9 item 9 vi_10 item 10 vi_11 item 11 vi_12 item 12 vi_13 item 13 vi_14 item 14 vi_15 item 15 vi_16 item 16 vi_17 item 17 vi_18 item 18 vi_19 item 19 vi_20 item 20 vi_21 item 21 vi_22 item 22 vi_23 item 23 vi_24 item 24 vi_25 item 25 vi_26 item 26 vi_27 item 27 vi_28 item 28 vi_29 item 29 vi_30 item 30 vi_31 item 31 vi_32 item 32 vi_33 item 33 vi_34 item 34 vi_35 item 35 vi_36 item 36 vi_37 item 37 vi_38 item 38 vi_39 item 39 vi_40 item 40 vi_41 item 41 vi_42 item 42 vi_43 item 43 vi_44 item 44 vi_45 item 45 vi_46 item 46 vi_47 item 47 vi_48 item 48 vi_49 item 49 vi_50 item 50 vi_51 item 51 vi_52 item 52","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/dropRdemo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Demo Dataset for Dropout in an Online Survey — dropRdemo","text":"dropRdemo Demo data dropout.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/find_drop_out.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Position of Drop Out in a Vector — find_drop_out","title":"Find the Position of Drop Out in a Vector — find_drop_out","text":"Check consecutive NAs backend vector.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/find_drop_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Position of Drop Out in a Vector — find_drop_out","text":"","code":"find_drop_out(v, clnms)"},{"path":"https://iscience-kn.github.io/dropR/reference/find_drop_out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Position of Drop Out in a Vector — find_drop_out","text":"v vector clnms character. Columns question items vector actually hold questions.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/find_drop_out.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find the Position of Drop Out in a Vector — find_drop_out","text":"find_drop_out() deprecated favor add_dropout_idx(), basis dropout analysis using dropR. reliable dropout analysis, please use add_dropout_idx() instead.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Odds From Probabilities — get_odds","title":"Compute Odds From Probabilities — get_odds","text":"Compute odds probabilities. function vectorized can handle vector probabilities, e.g. remaining percent participants calculated compute_stats().","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Odds From Probabilities — get_odds","text":"","code":"get_odds(p)"},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Odds From Probabilities — get_odds","text":"p vector probabilities. May larger 1 smaller zero.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Odds From Probabilities — get_odds","text":"","code":"get_odds(0.7) #> [1] 2.333333 get_odds(c(0.7, 0.2)) #> [1] 2.333333 0.250000"},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Odds Ratio — get_odds_ratio","title":"Compute Odds Ratio — get_odds_ratio","text":"Computes odds ratio given two probabilities. package, function can used compare percentages remaining participants two conditions time.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Odds Ratio — get_odds_ratio","text":"","code":"get_odds_ratio(a, b)"},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Odds Ratio — get_odds_ratio","text":"numeric probability value 0 1. b numeric probability value 0 1.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Odds Ratio — get_odds_ratio","text":"","code":"get_odds_ratio(0.7, 0.6) #> [1] 1.555556"},{"path":"https://iscience-kn.github.io/dropR/reference/get_steps_by_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Steps Data by Condition — get_steps_by_cond","title":"Get Steps Data by Condition — get_steps_by_cond","text":"Get Steps Data Condition","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_steps_by_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Steps Data by Condition — get_steps_by_cond","text":"","code":"get_steps_by_cond(sfit, condition = NULL)"},{"path":"https://iscience-kn.github.io/dropR/reference/get_steps_by_cond.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get Steps Data by Condition — get_steps_by_cond","text":"R/utils.R get_steps_by_cond function calculates steps data based survival model results. utility function used inside do_kpm() function dropR.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_steps_by_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Steps Data by Condition — get_steps_by_cond","text":"sfit object representing survival model results (e.g., Kaplan-Meier model). condition Optional. experiemtnal condition include output data frame, defaults NULL.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_steps_by_cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Steps Data by Condition — get_steps_by_cond","text":"data frame containing steps data, including time, survival estimates, upper confidence bounds, lower confidence bounds.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/get_survdiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Survival Curve Differences — get_survdiff","title":"Test Survival Curve Differences — get_survdiff","text":"function compares survival curves modeled do_kpm(). outputs contingency table Chisq measure difference.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_survdiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Survival Curve Differences — get_survdiff","text":"","code":"get_survdiff(df, cond, test_type)"},{"path":"https://iscience-kn.github.io/dropR/reference/get_survdiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Survival Curve Differences — get_survdiff","text":"df data set survival model do_kpm() cond character experimental condition variable data test_type numeric (0 1) parameter controls type test (0 means rho = 0; log-rank, 1 means rho = 1; Peto & Peto Wilcox)","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_survdiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Survival Curve Differences — get_survdiff","text":"","code":"kpm_est <- do_kpm(add_dropout_idx(dropRdemo, 3:54)) get_survdiff(kpm_est$d, \"experimental_condition\", 0) #> Call: #> survdiff(formula = f, data = df, rho = test_type) #>  #>                            N Observed Expected (O-E)^2/E (O-E)^2/V #> experimental_condition=11 72       72     73.7    0.0407    0.0996 #> experimental_condition=12 57       57     46.6    2.2969    5.5166 #> experimental_condition=21 56       56     59.2    0.1755    0.3878 #> experimental_condition=22 61       60     65.4    0.4450    1.0120 #>  #>  Chisq= 5.7  on 3 degrees of freedom, p= 0.1  get_survdiff(kpm_est$d, \"experimental_condition\", 1) #> Call: #> survdiff(formula = f, data = df, rho = test_type) #>  #>                            N Observed Expected (O-E)^2/E (O-E)^2/V #> experimental_condition=11 72     50.4     50.0   0.00318    0.0122 #> experimental_condition=12 57     45.2     38.0   1.35827    4.7009 #> experimental_condition=21 56     37.4     39.4   0.10730    0.3805 #> experimental_condition=22 61     37.8     43.4   0.70499    2.5778 #>  #>  Chisq= 5.9  on 3 degrees of freedom, p= 0.1"},{"path":"https://iscience-kn.github.io/dropR/reference/n_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Occurrence Count — n_count","title":"Occurrence Count — n_count","text":"n_count function calculates number occurrences specific value n numeric vector x.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/n_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Occurrence Count — n_count","text":"","code":"n_count(x, n)"},{"path":"https://iscience-kn.github.io/dropR/reference/n_count.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Occurrence Count — n_count","text":"R/utils.R","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/n_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Occurrence Count — n_count","text":"x Vector count occurrences. n Value count occurrences .","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/n_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Occurrence Count — n_count","text":"integer representing count occurrences n x.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/n_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Occurrence Count — n_count","text":"","code":"x <- c(1, 2, 3, 2, 4, 2) n_count(x, 2)   #> [1] 3 # Should return 3  n_count(c(\"A\", \"B\", \"B\"), \"B\") #> [1] 2 # Should return 2  n_count(c(TRUE, TRUE, FALSE), FALSE) #> [1] 1 # Should return 1  n_count(c(\"A\", \"B\", \"B\"), \"b\") #> [1] 0 # Should return 0 as it is not an exact match (case sensitive)"},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Dropout Curves — plot_do_curve","title":"Plot Dropout Curves — plot_do_curve","text":"functions uses ggplot2to create drop curves. Please note use add_dropout_idx() compute_stats() data running function needs certain data structure variables work properly.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Dropout Curves — plot_do_curve","text":"","code":"plot_do_curve(   df,   linetypes = TRUE,   stroke_width = 1,   full_scale = TRUE,   show_points = FALSE,   color_palette = \"color_blind\",   show_confbands = FALSE )"},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Dropout Curves — plot_do_curve","text":"df data.frame containing dropout statistics table computed compute_stats(). Make sure stats table contains q_idx column indexing question-items sequentially. linetypes boolean different line types used? Defaults TRUE. stroke_width numeric stroke width, defaults 1. full_scale boolean y axis range 0 100? Defaults TRUE, FALSE cuts min percent remaining (>0). show_points boolean dropout curves show individual data points? Defaults FALSE. color_palette character indicating color palette use. Defaults 'color_blind', alternatively choose 'gray' 'default' ggplot2 default colors. show_confbands boolean confidence bands added plot?Defaults FALSE.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Dropout Curves — plot_do_curve","text":"function returns ggplot object containing dropout curve plot. Using Shiny App version dropR, plot can easily downloaded different formats.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Dropout Curves — plot_do_curve","text":"","code":"stats <- compute_stats(add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)  plot_do_curve(stats)"},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_ks.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","title":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","text":"function, can easily plot extreme conditions, .k.. different dropout rates certain question. need define question function call do_ks() already, just call function directly inside plot function.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_ks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","text":"","code":"plot_do_ks(   stats,   ks,   linetypes = F,   show_confbands = F,   color_palette = c(\"#E69F00\", \"#CC79A7\") )"},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_ks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","text":"stats data.frame containing dropout statistics table computed compute_stats(). Make sure stats table contains q_idx column indexing question-items sequentially. ks List results do_ks() function coding extreme dropout conditions linetypes boolean different line types used? Defaults TRUE. show_confbands boolean confidence bands added plot?Defaults FALSE. color_palette character indicating color palette use. Defaults color blind friendly values, alternatively choose 'gray' create palette two colors, e.g. using R colors() HEX-values","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_ks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","text":"function returns ggplot object containing survival curve plot extreme dropout conditions. Using Shiny App version dropR, plot can easily downloaded different formats.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_ks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","text":"","code":"stats <- compute_stats(add_dropout_idx(dropRdemo, 3:54),  by_cond = \"experimental_condition\", no_of_vars = 52)  ks <- do_ks(stats, 52)  plot_do_ks(stats, ks, color_palette = \"gray\")   # ... or call the do_ks() function directly inside the plotting function plot_do_ks(stats, do_ks(stats, 30))   plot_do_ks(stats, ks, linetypes = TRUE, show_confbands = TRUE, color_palette = c(\"red\", \"violet\"))"},{"path":"https://iscience-kn.github.io/dropR/reference/start_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the dropR Shiny App — start_app","title":"Start the dropR Shiny App — start_app","text":"Starts interactive web application use dropR web browser. Make sure use Google Chrome Firefox best experience.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/start_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the dropR Shiny App — start_app","text":"","code":"start_app()"},{"path":"https://iscience-kn.github.io/dropR/reference/start_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start the dropR Shiny App — start_app","text":"app give less experienced R users statisticians good overview conduct dropout analysis. experienced analysts, can still helpful guiding use package steps taken order, outlined app (well function documentation).","code":""}]
