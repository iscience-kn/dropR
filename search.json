[{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://iscience-kn.github.io/dropR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://iscience-kn.github.io/dropR/articles/interactive.html","id":"dropout-analysis-walkthrough","dir":"Articles","previous_headings":"","what":"Dropout Analysis Walkthrough","title":"Interactive Dropout Analysis with dropR","text":"section describes extract information dropout demo data set without using dropR shiny UI. First, let’s make sure demo data set loaded available. data set look like :","code":"library(dropR) # Use demo dataset in a new data frame to be edited df <- dropRdemo"},{"path":"https://iscience-kn.github.io/dropR/articles/interactive.html","id":"basic-dropout-statistics","dir":"Articles","previous_headings":"Dropout Analysis Walkthrough","what":"Basic Dropout Statistics","title":"Interactive Dropout Analysis with dropR","text":"Now, let’s extract dropout, .e., information participant dropped questionnaire never returned. , need identify last question someone filled missing data present .k.NAs. use add_dropout_idx function demo data set add position question variables data. demo data, questions easily identified prefix vi_: experimental_condition column indicates belonging sub sample, treated differently. example, groups receive different sequence questions different wording. Next ’ll compute table containing basic dropout statistics item using compute_stats function. 246 participants total demo sample, 235 participants remain survey first question, accounting 95.53 percent sample. last question experiment, 61.79% participants “survived”. cs column shows absolute cumulative dropout count. stats table shows dropout statistics total sample first defined function by_cond, also shows statistics experimental condition separately. table basis many analyses can easily reported.","code":"qs <- which(grepl(\"vi_\", names(df))) # add numeric drop out position to original dataset df <- add_dropout_idx(df, q_pos = qs) kable(head(df[,c(1:3,(ncol(df)-1):ncol(df))])) stats <- compute_stats(df,                        by_cond = \"experimental_condition\",                        no_of_vars = length(qs)) kable(head(stats))"},{"path":"https://iscience-kn.github.io/dropR/articles/interactive.html","id":"plotting-dropout-curves","dir":"Articles","previous_headings":"Dropout Analysis Walkthrough","what":"Plotting Dropout Curves","title":"Interactive Dropout Analysis with dropR","text":"Based statistics table, dropR plots dropout curves conveniently.  default, function plot dropout curves chooses color palette designed de distinguishable color blind individuals. Adhering journal guidelines, may also choose gray color palette, distinguishing lines line type gray value.","code":"plot_do_curve(stats)"},{"path":"https://iscience-kn.github.io/dropR/articles/interactive.html","id":"full-workflow-example-using-tidyverse","dir":"Articles","previous_headings":"","what":"Full Workflow Example using tidyverse","title":"Interactive Dropout Analysis with dropR","text":"wrap Walkthrough, want show full analysis example just six lines code using tidyverse workflow functions magrittr ggplot2. Specifically, easy pipe several dropR functions create full analysis well plotting . Moreover, easy customize plot using common ggplot2 functions shown. Assuming want create similar analysis customized plot output, can achieve like :  Next, may want run statistical dropout analyses using dropR. can find -depth tutorial test article.","code":"library(ggplot2)  dropRdemo %>%    add_dropout_idx(3:54) %>%    compute_stats(by_cond = \"experimental_condition\", no_of_vars = 52) %>%    plot_do_curve(linetypes = F, full_scale = F, show_confbands = T) +   labs(title = \"Dropout Plot with tidyverse Workflow\") +   scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\") #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale. #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://iscience-kn.github.io/dropR/articles/tests.html","id":"running-a-chi-sq--test-for-a-selected-question","dir":"Articles","previous_headings":"","what":"Running a Chi-sq. Test for a Selected Question","title":"Running Dropout related Tests with dropR","text":"NOTE: Chi-sq. tests available column denoting experimental condition given. Let’s compute Chisq test question 15 experimentatl conditions 11 12. dropR’s dropout Chisq-Test returns list containing actual test results dropout overview table selected question.","code":"do_chisq(stats,          chisq_question = 15,          sel_cond_chisq = c('11','12'),          p_sim = TRUE) #> $`Test result` #>  #>  Pearson's Chi-squared test with simulated p-value (based on 2000 #>  replicates) #>  #> data:  test_table #> X-squared = 1.1979, df = NA, p-value = 0.3338 #>  #>  #> $`Dropout at question 15` #>           participants #> conditions dropout remaining #>         11      14        58 #>         12       7        50"},{"path":"https://iscience-kn.github.io/dropR/articles/tests.html","id":"kaplan-meier-estimation","dir":"Articles","previous_headings":"","what":"Kaplan-Meier Estimation","title":"Running Dropout related Tests with dropR","text":"","code":"kpm <- do_kpm(df = add_dropout_idx(dropRdemo, qs),               condition_col = \"experimental_condition\",               model_fit = \"total\")  kpm$model_fit #> [1] \"total\" head(kpm$steps) #>   x         y      uppr       lwr condition #> 1 0 0.3821138 0.4479241 0.3259726     total #> 2 1 0.3821138 0.4479241 0.3259726     total #> 3 1 0.3373984 0.4019727 0.2831975     total #> 4 2 0.3373984 0.4019727 0.2831975     total #> 5 2 0.3252033 0.3893417 0.2716307     total #> 6 3 0.3252033 0.3893417 0.2716307     total head(kpm$d) #>   obs_id experimental_condition vi_1 vi_2 vi_3 vi_4 vi_5 vi_6 vi_7 vi_8 vi_9 #> 1 7a9f33                     11    1    1    1    1    1    1    1    1    1 #> 2 e11f94                     22    1   NA    1    1    1    1   NA   NA   NA #> 3 e72a50                     22    1   NA    1    1    1    1    1    1    1 #> 4 f90f5f                     11    1    1    1    1    1    1    1    1    1 #> 5 20bc72                     12    1   NA    1    1    1    1    1    1    1 #> 6 76b97a                     22    1   NA    1    1    1    1    1    1    1 #>   vi_10 vi_11 vi_12 vi_13 vi_14 vi_15 vi_16 vi_17 vi_18 vi_19 vi_20 vi_21 vi_22 #> 1     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 2    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> 3     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 4     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 5     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 6     1     1     1     1     1     1     1     1     1     1     1     1     1 #>   vi_23 vi_24 vi_25 vi_26 vi_27 vi_28 vi_29 vi_30 vi_31 vi_32 vi_33 vi_34 vi_35 #> 1     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 2    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> 3     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 4     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 5     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 6     1     1     1     1     1    NA    NA    NA    NA    NA    NA    NA    NA #>   vi_36 vi_37 vi_38 vi_39 vi_40 vi_41 vi_42 vi_43 vi_44 vi_45 vi_46 vi_47 vi_48 #> 1     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 2    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> 3     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 4     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 5     1     1     1     1     1     1     1     1     1     1     1     1     1 #> 6    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>   vi_49 vi_50 vi_51 vi_52 do_idx surv #> 1     1     1     1     1      0    0 #> 2    NA    NA    NA    NA      6    6 #> 3     1     1     1     1      0    0 #> 4     1     1     1     1      0    0 #> 5     1     1     1     1      0    0 #> 6    NA    NA    NA    NA     27   27"},{"path":"https://iscience-kn.github.io/dropR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Annika Tave Overlander. Author, maintainer. Matthias Bannert. Author. Ulf-Dietrich Reips. Contributor.","code":""},{"path":"https://iscience-kn.github.io/dropR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Overlander , Bannert M (2024). dropR: Dropout Analysis Condition. R package version 1.0.3, https://github.com/iscience-kn/dropR, https://iscience-kn.github.io/dropR/.","code":"@Manual{,   title = {dropR: Dropout Analysis by Condition},   author = {Annika Tave Overlander and Matthias Bannert},   year = {2024},   note = {R package version 1.0.3, https://github.com/iscience-kn/dropR},   url = {https://iscience-kn.github.io/dropR/}, }"},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Dropout Analysis by Condition","text":"can install development version dropR GitHub : currently working get dropR back CRAN. ’s , can install dropR via","code":"# install.packages(\"remotes\") remotes::install_github(\"iscience-kn/dropR\") install.packages(\"dropR\")"},{"path":"https://iscience-kn.github.io/dropR/index.html","id":"usage-as-a-shiny-app-graphical-user-interface","dir":"","previous_headings":"","what":"Usage as a Shiny App (Graphical User Interface)","title":"Dropout Analysis by Condition","text":"start dropR’s built-GUI, run visit dropR Web App.","code":"dropR::start_app()"},{"path":"https://iscience-kn.github.io/dropR/index.html","id":"interactive-usage-use-dropr-on-the-r-console","dir":"","previous_headings":"","what":"Interactive Usage (use dropR on the R Console)","title":"Dropout Analysis by Condition","text":"can also use dropR’s functionality within R, .e., either console within functions packages. Read interactive usage dropR walkthrough article. Fig. 1: dropR Example Plot plot_do_curve().","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Dropout Index to a Data.Frame — add_dropout_idx","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"Find drop positions data.frame contains multiple questions asked sequentially. function adds Dropout Index variable do_idx data.frame necessary analyses dropout. Use function first prepare dropout analysis. , keep going creating dropout statistics using compute_stats().","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"","code":"add_dropout_idx(df, q_pos)"},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"R/add_dropout_idx.R","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"df data.frame containing NAs q_pos numeric range columns contain question items","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"Returns original data frame column do_idx added.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"Importantly, function start counting missing data end data frame. missing data somewhere , .e. single item skipped forgotten counted dropout. function identify sequences missing data go end data frame add number last answered question do_idx. Therefore, variables must order asked, otherwise analyses valid.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/add_dropout_idx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Dropout Index to a Data.Frame — add_dropout_idx","text":"","code":"dropout <- add_dropout_idx(dropRdemo, 3:54)"},{"path":"https://iscience-kn.github.io/dropR/reference/compute_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Dropout Statistics — compute_stats","title":"Compute Dropout Statistics — compute_stats","text":"second step conducting dropout analysis dropR. Outputs necessary statistics analyze visualize dropout, sample size N data (condition selected), cumulative dropout remaining participants absolute numbers percent. experimental condition added, stats calculated whole data total.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/compute_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Dropout Statistics — compute_stats","text":"","code":"compute_stats(df, by_cond = \"None\", no_of_vars)"},{"path":"https://iscience-kn.github.io/dropR/reference/compute_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Dropout Statistics — compute_stats","text":"df data.frame containing variable do_idx add_dropout_idx() by_cond character name condition variable data, defaults 'None' output total statistics. no_of_vars numeric number variables contain questions","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/compute_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Dropout Statistics — compute_stats","text":"data frame 6 columns (q_idx, condition, cs, N, remain, pct_remain) many rows questions original data (overall data conditions selected condition).","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/compute_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Dropout Statistics — compute_stats","text":"","code":"do_stats <- compute_stats(df = add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)"},{"path":"https://iscience-kn.github.io/dropR/reference/do_chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Chisq-Test Given a Question Position — do_chisq","title":"Compute Chisq-Test Given a Question Position — do_chisq","text":"function performs chi-squared contingency table test dropout given question data. Note input data format computed compute_stats(). test can performed either conditions (excluding total) select conditions.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Chisq-Test Given a Question Position — do_chisq","text":"","code":"do_chisq(do_stats, chisq_question, sel_cond_chisq, p_sim = TRUE)"},{"path":"https://iscience-kn.github.io/dropR/reference/do_chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Chisq-Test Given a Question Position — do_chisq","text":"do_stats data.frame dropout statistics computed compute_stats(). chisq_question numeric question compare dropout . sel_cond_chisq vector (class conditions variable original data set) selected conditions. p_sim boolean Simulate p value parameter (Monte Carlo simulation)? Defaults TRUE.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_chisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Chisq-Test Given a Question Position — do_chisq","text":"Returns test results chisq.test experimental conditions defined question.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/do_chisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Chisq-Test Given a Question Position — do_chisq","text":"","code":"do_stats <- compute_stats(add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)  do_chisq(do_stats, 47, c(12, 22), TRUE) #> $`Test result` #>  #> \tPearson's Chi-squared test with simulated p-value (based on 2000 #> \treplicates) #>  #> data:  test_table #> X-squared = 4.8802, df = NA, p-value = 0.03598 #>  #>  #> $`Dropout at question 47` #>           participants #> conditions dropout remaining #>         12      15        42 #>         22      28        33 #>"},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Kaplan-Meier Survival Estimation — do_kpm","title":"Kaplan-Meier Survival Estimation — do_kpm","text":"function needs data set dropout index added add_dropout_idx(). do_kpm function performs survival analysis Kaplan-Meier Estimation returns list containing survival steps, original data frame, model fit type. function can fit survival model either entire data set separately specified condition column.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kaplan-Meier Survival Estimation — do_kpm","text":"","code":"do_kpm(df, condition_col = \"experimental_condition\", model_fit = \"total\")"},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kaplan-Meier Survival Estimation — do_kpm","text":"df data set do_idx added add_dropout_idx() condition_col character denoting experimental conditions model model_fit character either \"total\" total model \"conditions\"","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kaplan-Meier Survival Estimation — do_kpm","text":"Returns list containing steps (survival steps extracted fitted models), d (original data frame), model_fit (model fit type).","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/do_kpm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kaplan-Meier Survival Estimation — do_kpm","text":"","code":"demo_kpm <- do_kpm(df = add_dropout_idx(dropRdemo, 3:54), condition_col = \"experimental_condition\", model_fit = \"total\")  head(demo_kpm$steps) #>   x         y      uppr       lwr condition #> 1 0 0.3821138 0.4479241 0.3259726     total #> 2 1 0.3821138 0.4479241 0.3259726     total #> 3 1 0.3373984 0.4019727 0.2831975     total #> 4 2 0.3373984 0.4019727 0.2831975     total #> 5 2 0.3252033 0.3893417 0.2716307     total #> 6 3 0.3252033 0.3893417 0.2716307     total"},{"path":"https://iscience-kn.github.io/dropR/reference/do_ks.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","title":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","text":"test used survival analysis extreme conditions, ones different rates dropout. function automatically prepares data runs stats::ks.test() .","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_ks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","text":"","code":"do_ks(do_stats, question)"},{"path":"https://iscience-kn.github.io/dropR/reference/do_ks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","text":"do_stats data frame made compute_stats(), containing information percent remaining per question per condition question Index question included analysis, commonly last question survey.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_ks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","text":"Returns result Kolmogorov-Smirnoff test including conditions different dropout rates.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_ks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Kolmogorov-Smirnov Test for most extreme conditions — do_ks","text":"","code":"do_stats <- compute_stats(df = add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)  do_ks(do_stats, 52) #>  #> \tExact two-sample Kolmogorov-Smirnov test of conditions 12 & 22 at #> \tquestion 52 #>  #> data:  do_stats$pct_remain[do_stats$condition == 12] and do_stats$pct_remain[do_stats$condition == 22] #> D = 0.82692, p-value < 2.2e-16 #> alternative hypothesis: two-sided #>"},{"path":"https://iscience-kn.github.io/dropR/reference/do_or_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Dropout Odds Ratio Table — do_or_table","title":"Dropout Odds Ratio Table — do_or_table","text":"function calculates Odds Ratio table given question selected experimental conditions. needs data format created compute_stats() input.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_or_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dropout Odds Ratio Table — do_or_table","text":"","code":"do_or_table(do_stats, chisq_question, sel_cond_chisq)"},{"path":"https://iscience-kn.github.io/dropR/reference/do_or_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dropout Odds Ratio Table — do_or_table","text":"do_stats data.frame statistics table computed compute_stats(). chisq_question numeric question calculate table sel_cond_chisq character vector naming experimental conditions compare","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_or_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dropout Odds Ratio Table — do_or_table","text":"Returns Matrix containing Odds Ratios dropout selected conditions.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/do_or_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dropout Odds Ratio Table — do_or_table","text":"","code":"do_stats <- compute_stats(df = add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)  do_or_table(do_stats, chisq_question = 51, sel_cond_chisq = c(\"11\", \"12\", \"21\", \"22\")) #>           11        12       21       22 #> 11 1.0000000 0.5952381 1.161616 1.510417 #> 12 1.6800000 1.0000000 1.951515 2.537500 #> 21 0.8608696 0.5124224 1.000000 1.300272 #> 22 0.6620690 0.3940887 0.769070 1.000000"},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Steps for Uneven Data Points — do_steps","title":"Calculate Steps for Uneven Data Points — do_steps","text":"do_steps function calculates steps data points represented numbers questions original experimental survey data x remaining percent participants y.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Steps for Uneven Data Points — do_steps","text":"","code":"do_steps(x, y, return_df = TRUE)"},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Steps for Uneven Data Points — do_steps","text":"x Numeric vector representing question numbers y Numeric vector representing remaining percent participants return_df Logical. TRUE, function returns data frame; otherwise, returns list.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Steps for Uneven Data Points — do_steps","text":"Returns data frame list containing modified x y values.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Steps for Uneven Data Points — do_steps","text":"Due nature dropout/ survival data, step functions necessary accurately depict participants remaining. Dropout data includes time event (.k.. dropout certain question time), changes remaining participants discrete rather continuous. means changes survival probability occur specific points better represented steps continuum.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/do_steps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Steps for Uneven Data Points — do_steps","text":"","code":"x <- c(1, 2, 3, 4, 5) y <- c(100, 100, 95, 90, 85) do_steps(x, y) #>   x   y #> 1 1 100 #> 2 3 100 #> 3 3  95 #> 4 4  95 #> 5 4  90 #> 6 5  90 #> 7 5  85  # Using the example dataset dropRdemo  do_stats <- compute_stats(df = add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)  tot_stats <- do_stats[do_stats$condition == \"total\", ] do_steps(tot_stats$q_idx, tot_stats$pct_remain) #>     x         y #> 1   1 0.9552846 #> 2   2 0.9552846 #> 3   2 0.9430894 #> 4   3 0.9430894 #> 5   3 0.9065041 #> 6   4 0.9065041 #> 7   4 0.8943089 #> 8   5 0.8943089 #> 9   5 0.8902439 #> 10  6 0.8902439 #> 11  6 0.8739837 #> 12  7 0.8739837 #> 13  7 0.8577236 #> 14  8 0.8577236 #> 15  8 0.8495935 #> 16  9 0.8495935 #> 17  9 0.8455285 #> 18 10 0.8455285 #> 19 10 0.8292683 #> 20 11 0.8292683 #> 21 11 0.8252033 #> 22 12 0.8252033 #> 23 12 0.7967480 #> 24 15 0.7967480 #> 25 15 0.7886179 #> 26 16 0.7886179 #> 27 16 0.7845528 #> 28 17 0.7845528 #> 29 17 0.7804878 #> 30 18 0.7804878 #> 31 18 0.7682927 #> 32 19 0.7682927 #> 33 19 0.7601626 #> 34 20 0.7601626 #> 35 20 0.7560976 #> 36 21 0.7560976 #> 37 21 0.7479675 #> 38 22 0.7479675 #> 39 22 0.7398374 #> 40 23 0.7398374 #> 41 23 0.7317073 #> 42 25 0.7317073 #> 43 25 0.7235772 #> 44 26 0.7235772 #> 45 26 0.7195122 #> 46 27 0.7195122 #> 47 27 0.7154472 #> 48 28 0.7154472 #> 49 28 0.7113821 #> 50 29 0.7113821 #> 51 29 0.7073171 #> 52 30 0.7073171 #> 53 30 0.7032520 #> 54 31 0.7032520 #> 55 31 0.6991870 #> 56 32 0.6991870 #> 57 32 0.6951220 #> 58 33 0.6951220 #> 59 33 0.6910569 #> 60 34 0.6910569 #> 61 34 0.6869919 #> 62 35 0.6869919 #> 63 35 0.6747967 #> 64 36 0.6747967 #> 65 36 0.6666667 #> 66 37 0.6666667 #> 67 37 0.6626016 #> 68 39 0.6626016 #> 69 39 0.6585366 #> 70 40 0.6585366 #> 71 40 0.6504065 #> 72 44 0.6504065 #> 73 44 0.6463415 #> 74 45 0.6463415 #> 75 45 0.6382114 #> 76 46 0.6382114 #> 77 46 0.6300813 #> 78 47 0.6300813 #> 79 47 0.6219512 #> 80 48 0.6219512 #> 81 48 0.6178862 #> 82 52 0.6178862"},{"path":"https://iscience-kn.github.io/dropR/reference/dropR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dropR: Dropout Analysis by Condition — dropR-package","title":"dropR: Dropout Analysis by Condition — dropR-package","text":"Analysis visualization dropout conditions surveys (online) experiments. Features include computation dropout statistics, comparing dropout conditions (e.g. Chi square), analyzing survival (e.g. Kaplan-Meier estimation), comparing conditions different rates dropout (Kolmogorov-Smirnov) visualizing result designated plotting functions. Sources: Andrea Frick, Marie-Terese Baechtiger & Ulf-Dietrich Reips (2001) https://www.researchgate.net/publication/223956222_Financial_incentives_personal_information_and_drop-out_in_online_studies; Ulf-Dietrich Reips (2002) \"Standards Internet-Based Experimenting\" doi:10.1027//1618-3169.49.4.243 .","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/dropR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dropR: Dropout Analysis by Condition — dropR-package","text":"Maintainer: Annika Tave Overlander annika-tave.overlander@uni.kn Authors: Matthias Bannert bannert@kof.ethz.ch contributors: Ulf-Dietrich Reips [contributor]","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/dropRdemo.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo Dataset for Dropout in an Online Survey — dropRdemo","title":"Demo Dataset for Dropout in an Online Survey — dropRdemo","text":"Simulated demo data set dropout survey.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/dropRdemo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo Dataset for Dropout in an Online Survey — dropRdemo","text":"data frame 246 rows 54 variables (order presented fictional survey). obs_id Observation ID experimental_condition experimental condition vi_1 item 1 vi_2 item 2 vi_3 item 3 vi_4 item 4 vi_5 item 5 vi_6 item 6 vi_7 item 7 vi_8 item 8 vi_9 item 9 vi_10 item 10 vi_11 item 11 vi_12 item 12 vi_13 item 13 vi_14 item 14 vi_15 item 15 vi_16 item 16 vi_17 item 17 vi_18 item 18 vi_19 item 19 vi_20 item 20 vi_21 item 21 vi_22 item 22 vi_23 item 23 vi_24 item 24 vi_25 item 25 vi_26 item 26 vi_27 item 27 vi_28 item 28 vi_29 item 29 vi_30 item 30 vi_31 item 31 vi_32 item 32 vi_33 item 33 vi_34 item 34 vi_35 item 35 vi_36 item 36 vi_37 item 37 vi_38 item 38 vi_39 item 39 vi_40 item 40 vi_41 item 41 vi_42 item 42 vi_43 item 43 vi_44 item 44 vi_45 item 45 vi_46 item 46 vi_47 item 47 vi_48 item 48 vi_49 item 49 vi_50 item 50 vi_51 item 51 vi_52 item 52","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/dropRdemo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Demo Dataset for Dropout in an Online Survey — dropRdemo","text":"dropRdemo Demo data dropout.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Odds From Probabilities — get_odds","title":"Compute Odds From Probabilities — get_odds","text":"Compute odds probabilities. function vectorized can handle vector probabilities, e.g. remaining percent participants calculated compute_stats().","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Odds From Probabilities — get_odds","text":"","code":"get_odds(p)"},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Odds From Probabilities — get_odds","text":"p vector probabilities. May larger 1 smaller zero.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Odds From Probabilities — get_odds","text":"Returns numerical vector length original input reflecting odds.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Odds From Probabilities — get_odds","text":"","code":"get_odds(0.7) #> [1] 2.333333 get_odds(c(0.7, 0.2)) #> [1] 2.333333 0.250000"},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Odds Ratio — get_odds_ratio","title":"Compute Odds Ratio — get_odds_ratio","text":"Computes odds ratio given two probabilities. package, function can used compare percentages remaining participants two conditions time.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Odds Ratio — get_odds_ratio","text":"","code":"get_odds_ratio(a, b)"},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Odds Ratio — get_odds_ratio","text":"numeric probability value 0 1. b numeric probability value 0 1.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Odds Ratio — get_odds_ratio","text":"Returns numerical vector length original input reflecting Odds Ratio ().","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/get_odds_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Odds Ratio — get_odds_ratio","text":"","code":"get_odds_ratio(0.7, 0.6) #> [1] 1.555556"},{"path":"https://iscience-kn.github.io/dropR/reference/get_steps_by_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Steps Data by Condition — get_steps_by_cond","title":"Get Steps Data by Condition — get_steps_by_cond","text":"get_steps_by_cond function calculates steps data based survival model results. utility function used inside do_kpm() function dropR.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_steps_by_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Steps Data by Condition — get_steps_by_cond","text":"","code":"get_steps_by_cond(sfit, condition = NULL)"},{"path":"https://iscience-kn.github.io/dropR/reference/get_steps_by_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Steps Data by Condition — get_steps_by_cond","text":"sfit object representing survival model results (e.g., Kaplan-Meier model). condition Optional. experimental condition include output data frame, defaults NULL.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_steps_by_cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Steps Data by Condition — get_steps_by_cond","text":"Returns data frame containing steps data, including time, survival estimates, upper confidence bounds, lower confidence bounds.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/get_survdiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Survival Curve Differences — get_survdiff","title":"Test Survival Curve Differences — get_survdiff","text":"function compares survival curves modeled do_kpm(). outputs contingency table Chisq measure difference.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_survdiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Survival Curve Differences — get_survdiff","text":"","code":"get_survdiff(kds, cond, test_type)"},{"path":"https://iscience-kn.github.io/dropR/reference/get_survdiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Survival Curve Differences — get_survdiff","text":"kds data set survival model do_kpm() cond character experimental condition variable data test_type numeric (0 1) parameter controls type test (0 means rho = 0; log-rank, 1 means rho = 1; Peto & Peto Wilcox)","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_survdiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Survival Curve Differences — get_survdiff","text":"Returns survival test results called survival::survdiff().","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/get_survdiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Survival Curve Differences — get_survdiff","text":"","code":"kpm_est <- do_kpm(add_dropout_idx(dropRdemo, 3:54)) get_survdiff(kpm_est$d, \"experimental_condition\", 0) #> Call: #> survdiff(formula = f, data = kds, rho = test_type) #>  #>                            N Observed Expected (O-E)^2/E (O-E)^2/V #> experimental_condition=11 72       72     73.7    0.0407    0.0996 #> experimental_condition=12 57       57     46.6    2.2969    5.5166 #> experimental_condition=21 56       56     59.2    0.1755    0.3878 #> experimental_condition=22 61       60     65.4    0.4450    1.0120 #>  #>  Chisq= 5.7  on 3 degrees of freedom, p= 0.1  get_survdiff(kpm_est$d, \"experimental_condition\", 1) #> Call: #> survdiff(formula = f, data = kds, rho = test_type) #>  #>                            N Observed Expected (O-E)^2/E (O-E)^2/V #> experimental_condition=11 72     50.4     50.0   0.00318    0.0122 #> experimental_condition=12 57     45.2     38.0   1.35827    4.7009 #> experimental_condition=21 56     37.4     39.4   0.10730    0.3805 #> experimental_condition=22 61     37.8     43.4   0.70499    2.5778 #>  #>  Chisq= 5.9  on 3 degrees of freedom, p= 0.1"},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Dropout Curves — plot_do_curve","title":"Plot Dropout Curves — plot_do_curve","text":"functions uses ggplot2to create drop curves. Please note use add_dropout_idx() compute_stats() data running function needs certain data structure variables work properly.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Dropout Curves — plot_do_curve","text":"","code":"plot_do_curve(   do_stats,   linetypes = TRUE,   stroke_width = 1,   full_scale = TRUE,   show_points = FALSE,   show_confbands = FALSE,   color_palette = \"color_blind\" )"},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Dropout Curves — plot_do_curve","text":"do_stats data.frame containing dropout statistics table computed compute_stats(). Make sure do_stats table contains q_idx column indexing question-items sequentially. linetypes boolean different line types used? Defaults TRUE. stroke_width numeric stroke width, defaults 1. full_scale boolean y axis range 0 100? Defaults TRUE, FALSE cuts min percent remaining (>0). show_points boolean dropout curves show individual data points? Defaults FALSE. show_confbands boolean confidence bands added plot? Defaults FALSE. color_palette character indicating color palette use. Defaults 'color_blind', alternatively choose 'gray' 'default' ggplot2 default colors.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Dropout Curves — plot_do_curve","text":"Returns ggplot object containing dropout curve plot. Using Shiny App version dropR, plot can easily downloaded different formats.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Dropout Curves — plot_do_curve","text":"","code":"do_stats <- compute_stats(add_dropout_idx(dropRdemo, 3:54), by_cond = \"experimental_condition\", no_of_vars = 52)  plot_do_curve(do_stats)"},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_kpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Kaplan Meier Survival Estimation — plot_do_kpm","title":"Plot a Kaplan Meier Survival Estimation — plot_do_kpm","text":"plot_do_kpm function generates Kaplan-Meier survival plot based output do_kpm() function. allows customization conditions display, confidence intervals, color palettes, y-axis scaling.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_kpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Kaplan Meier Survival Estimation — plot_do_kpm","text":"","code":"plot_do_kpm(   kds,   sel_conds = c(\"11\", \"12\", \"21\", \"22\"),   kpm_ci = TRUE,   full_scale_kpm = FALSE,   color_palette_kp = \"color_blind\" )"},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_kpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Kaplan Meier Survival Estimation — plot_do_kpm","text":"kds list object modeled do_kpm() sel_conds character experimental conditions plot. kpm_ci boolean confidence bands plot? Defaults TRUE. full_scale_kpm boolean Y axis show full range 0 100? Defaults FALSE. color_palette_kp character indicating color palette use. Defaults 'color_blind', alternatively choose 'gray' gray scale values 'default' ggplot2 default colors.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_kpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Kaplan Meier Survival Estimation — plot_do_kpm","text":"Returns ggplot object containing Kaplan-Meier survival plot. Using Shiny App version dropR, plot can easily downloaded different formats.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_kpm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Kaplan Meier Survival Estimation — plot_do_kpm","text":"","code":"plot_do_kpm(do_kpm(d = add_dropout_idx(dropRdemo, 3:54), condition_col = \"experimental_condition\", model_fit = \"total\"))   plot_do_kpm(do_kpm(d = add_dropout_idx(dropRdemo, 3:54), condition_col = \"experimental_condition\", model_fit = \"conditions\"), sel_conds = c(\"11\", \"12\", \"21\", \"22\"))"},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_ks.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","title":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","text":"function, can easily plot extreme conditions, .k.. different dropout rates certain question. need define question function call do_ks() already, just call function directly inside plot function.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_ks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","text":"","code":"plot_do_ks(   do_stats,   ks,   linetypes = FALSE,   show_confbands = FALSE,   color_palette = c(\"#E69F00\", \"#CC79A7\") )"},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_ks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","text":"do_stats data.frame containing dropout statistics table computed compute_stats(). Make sure do_stats table contains q_idx column indexing question-items sequentially. ks List results do_ks() function coding extreme dropout conditions linetypes boolean different line types used? Defaults FALSE. show_confbands boolean confidence bands added plot? Defaults FALSE. color_palette character indicating color palette use. Defaults color blind friendly values, alternatively choose 'gray' create palette two colors, e.g. using R colors() HEX-values","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_ks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","text":"Returns ggplot object containing survival curve plot extreme dropout conditions. Using Shiny App version dropR, plot can easily downloaded different formats.","code":""},{"path":[]},{"path":"https://iscience-kn.github.io/dropR/reference/plot_do_ks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Most Extreme Conditions to Visualize Kolmogorov-Smirnov Test Results — plot_do_ks","text":"","code":"do_stats <- compute_stats(add_dropout_idx(dropRdemo, 3:54),  by_cond = \"experimental_condition\", no_of_vars = 52)  ks <- do_ks(do_stats, 52)  plot_do_ks(do_stats, ks, color_palette = \"gray\")   # ... or call the do_ks() function directly inside the plotting function plot_do_ks(do_stats, do_ks(do_stats, 30))   plot_do_ks(do_stats, ks, linetypes = TRUE,  show_confbands = TRUE, color_palette = c(\"red\", \"violet\"))"},{"path":"https://iscience-kn.github.io/dropR/reference/start_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the dropR Shiny App — start_app","title":"Start the dropR Shiny App — start_app","text":"Starts interactive web application use dropR web browser. Make sure use Google Chrome Firefox best experience.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/start_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the dropR Shiny App — start_app","text":"","code":"start_app()"},{"path":"https://iscience-kn.github.io/dropR/reference/start_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start the dropR Shiny App — start_app","text":"return value; starts shiny app helper get started dropout analysis. app procedures available functions.","code":""},{"path":"https://iscience-kn.github.io/dropR/reference/start_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start the dropR Shiny App — start_app","text":"app give less experienced R users statisticians good overview conduct dropout analysis. experienced analysts, can still helpful guiding use package steps taken order, outlined app (well function documentation).","code":""},{"path":"https://iscience-kn.github.io/dropR/news/index.html","id":"dropr-103","dir":"Changelog","previous_headings":"","what":"dropR 1.0.3","title":"dropR 1.0.3","text":"CRAN resubmission big package re-vamp!","code":""}]
